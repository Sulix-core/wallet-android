apply plugin: 'com.android.application'

android {
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.onix.wallet"
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 83
        versionName "1.0.1"
    }

    /*splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'armeabi-v7a'
            universalApk true
        }
    }

    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(
                            com.android.build.OutputFile.ABI), 0) * 10000000 + android.defaultConfig.versionCode
        }
    }*/

    /*sourceSets {
        main {
            jni.srcDirs = []
        }
    }


    tasks.all { task ->
        if (task.name.startsWith('compile') && task.name.endsWith('Ndk')) {
            task.enabled = false
        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'aars'
    }
}

//sourceSets {
//    unitTest {
//        java.srcDir file('src/test/java')
//        resources.srcDir file('src/test/resources')
//    }
//}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: '../core/libs', include: ['*.jar'])
    // Testing
//    androidTestCompile 'junit:junit:4.11'
//    androidTestCompile 'org.robolectric:robolectric:2.3'
//    androidTestCompile 'com.squareup:fest-android:1.0.+'
    compile project(':core')
    compile 'com.android.support:gridlayout-v7:21.0.3'
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    compile 'com.madgag.spongycastle:core:1.51.0.0'
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    compile 'com.google.zxing:core:3.1.0'
    compile 'ch.acra:acra:4.5.0'
    compile 'com.android.support:support-v4-preferencefragment:1.0.0@aar'
//    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
}

//apply plugin: 'robolectric'

//robolectric {
//    include '**/*Test.class'
//    exclude '**/espresso/**/*.class'
//}

//apply plugin: 'idea'

//idea {
//    module {
//        testOutputDir = file('build/test-classes/debug')
//    }
//}
